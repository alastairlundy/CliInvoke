### YamlMime:ManagedReference
items:
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  commentId: T:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  id: ArgumentsBuilder
  parent: AlastairLundy.CliInvoke.Builders
  children:
  - AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.#ctor
  - AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.#ctor(System.Func{System.String,System.Boolean})
  - AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.#ctor(System.Text.StringBuilder)
  - AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.#ctor(System.Text.StringBuilder,System.Func{System.String,System.Boolean})
  - AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable})
  - AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Boolean)
  - AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Globalization.CultureInfo)
  - AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Globalization.CultureInfo,System.Boolean)
  - AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.IFormatProvider,System.Boolean)
  - AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.String})
  - AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  - AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable)
  - AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable,System.Boolean)
  - AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable,System.Globalization.CultureInfo)
  - AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable,System.Globalization.CultureInfo,System.Boolean)
  - AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable,System.IFormatProvider,System.Boolean)
  - AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.String)
  - AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.String,System.Boolean)
  - AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Clear
  - AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.EscapeSpecialCharacters(System.String)
  - AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.ToString
  langs:
  - csharp
  - vb
  name: ArgumentsBuilder
  nameWithType: ArgumentsBuilder
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  type: Class
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: ArgumentsBuilder
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 40
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  summary: A class that provides a fluent interface style builder for constructing Arguments to provide to a program.
  example: []
  syntax:
    content: 'public class ArgumentsBuilder : IArgumentsBuilder'
    content.vb: Public Class ArgumentsBuilder Implements IArgumentsBuilder
  inheritance:
  - System.Object
  implements:
  - AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.#ctor
  commentId: M:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.#ctor
  id: '#ctor'
  parent: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  langs:
  - csharp
  - vb
  name: ArgumentsBuilder()
  nameWithType: ArgumentsBuilder.ArgumentsBuilder()
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.ArgumentsBuilder()
  type: Constructor
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: .ctor
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 51
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  summary: Initializes the ArgumentsBuilder.
  example: []
  syntax:
    content: public ArgumentsBuilder()
    content.vb: Public Sub New()
  overload: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.#ctor*
  nameWithType.vb: ArgumentsBuilder.New()
  fullName.vb: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.New()
  name.vb: New()
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.#ctor(System.Func{System.String,System.Boolean})
  commentId: M:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.#ctor(System.Func{System.String,System.Boolean})
  id: '#ctor(System.Func{System.String,System.Boolean})'
  parent: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  langs:
  - csharp
  - vb
  name: ArgumentsBuilder(Func<string, bool>)
  nameWithType: ArgumentsBuilder.ArgumentsBuilder(Func<string, bool>)
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.ArgumentsBuilder(System.Func<string, bool>)
  type: Constructor
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: .ctor
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 60
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  summary: Initializes the ArgumentsBuilder with the specified Argument Validation Logic.
  example: []
  syntax:
    content: public ArgumentsBuilder(Func<string, bool> argumentValidationLogic)
    parameters:
    - id: argumentValidationLogic
      type: System.Func{System.String,System.Boolean}
      description: The argument validation logic to use to decide whether to allow Arguments passed to the builder.
    content.vb: Public Sub New(argumentValidationLogic As Func(Of String, Boolean))
  overload: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.#ctor*
  nameWithType.vb: ArgumentsBuilder.New(Func(Of String, Boolean))
  fullName.vb: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.New(System.Func(Of String, Boolean))
  name.vb: New(Func(Of String, Boolean))
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.#ctor(System.Text.StringBuilder)
  commentId: M:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.#ctor(System.Text.StringBuilder)
  id: '#ctor(System.Text.StringBuilder)'
  parent: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  langs:
  - csharp
  - vb
  name: ArgumentsBuilder(StringBuilder)
  nameWithType: ArgumentsBuilder.ArgumentsBuilder(StringBuilder)
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.ArgumentsBuilder(System.Text.StringBuilder)
  type: Constructor
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: .ctor
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 71
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  summary: ''
  example: []
  syntax:
    content: protected ArgumentsBuilder(StringBuilder buffer)
    parameters:
    - id: buffer
      type: System.Text.StringBuilder
      description: ''
    content.vb: Protected Sub New(buffer As StringBuilder)
  overload: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.#ctor*
  nameWithType.vb: ArgumentsBuilder.New(StringBuilder)
  fullName.vb: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.New(System.Text.StringBuilder)
  name.vb: New(StringBuilder)
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.#ctor(System.Text.StringBuilder,System.Func{System.String,System.Boolean})
  commentId: M:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.#ctor(System.Text.StringBuilder,System.Func{System.String,System.Boolean})
  id: '#ctor(System.Text.StringBuilder,System.Func{System.String,System.Boolean})'
  parent: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  langs:
  - csharp
  - vb
  name: ArgumentsBuilder(StringBuilder, Func<string, bool>)
  nameWithType: ArgumentsBuilder.ArgumentsBuilder(StringBuilder, Func<string, bool>)
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.ArgumentsBuilder(System.Text.StringBuilder, System.Func<string, bool>)
  type: Constructor
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: .ctor
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 76
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  syntax:
    content: protected ArgumentsBuilder(StringBuilder buffer, Func<string, bool> argumentValidationLogic)
    parameters:
    - id: buffer
      type: System.Text.StringBuilder
    - id: argumentValidationLogic
      type: System.Func{System.String,System.Boolean}
    content.vb: Protected Sub New(buffer As StringBuilder, argumentValidationLogic As Func(Of String, Boolean))
  overload: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.#ctor*
  nameWithType.vb: ArgumentsBuilder.New(StringBuilder, Func(Of String, Boolean))
  fullName.vb: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.New(System.Text.StringBuilder, System.Func(Of String, Boolean))
  name.vb: New(StringBuilder, Func(Of String, Boolean))
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.String,System.Boolean)
  commentId: M:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.String,System.Boolean)
  id: Add(System.String,System.Boolean)
  parent: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  langs:
  - csharp
  - vb
  name: Add(string, bool)
  nameWithType: ArgumentsBuilder.Add(string, bool)
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(string, bool)
  type: Method
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: Add
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 88
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  summary: Appends a string value to the arguments builder.
  example: []
  syntax:
    content: >-
      [Pure]

      public IArgumentsBuilder Add(string value, bool escapeSpecialCharacters)
    parameters:
    - id: value
      type: System.String
      description: The string value to append.
    - id: escapeSpecialCharacters
      type: System.Boolean
      description: True to escape special characters in the value, false otherwise.
    return:
      type: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
      description: A new instance of the IArgumentsBuilder with the updated arguments.
    content.vb: >-
      <Pure>

      Public Function Add(value As String, escapeSpecialCharacters As Boolean) As IArgumentsBuilder
  overload: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add*
  implements:
  - AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.String,System.Boolean)
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: ArgumentsBuilder.Add(String, Boolean)
  fullName.vb: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(String, Boolean)
  name.vb: Add(String, Boolean)
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.String)
  commentId: M:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.String)
  id: Add(System.String)
  parent: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  langs:
  - csharp
  - vb
  name: Add(string)
  nameWithType: ArgumentsBuilder.Add(string)
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(string)
  type: Method
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: Add
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 138
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  summary: Appends a string value to the arguments builder without escaping special characters.
  example: []
  syntax:
    content: >-
      [Pure]

      public IArgumentsBuilder Add(string value)
    parameters:
    - id: value
      type: System.String
      description: The string value to append.
    return:
      type: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
      description: A new instance of the IArgumentsBuilder with the updated arguments.
    content.vb: >-
      <Pure>

      Public Function Add(value As String) As IArgumentsBuilder
  overload: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add*
  implements:
  - AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.String)
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: ArgumentsBuilder.Add(String)
  fullName.vb: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(String)
  name.vb: Add(String)
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  commentId: M:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  id: Add(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  parent: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  langs:
  - csharp
  - vb
  name: Add(IEnumerable<string>, bool)
  nameWithType: ArgumentsBuilder.Add(IEnumerable<string>, bool)
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable<string>, bool)
  type: Method
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: Add
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 157
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  summary: Appends a collection of string values to the arguments builder.
  example: []
  syntax:
    content: >-
      [Pure]

      public IArgumentsBuilder Add(IEnumerable<string> values, bool escapeSpecialChars)
    parameters:
    - id: values
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The collection of string values to append.
    - id: escapeSpecialChars
      type: System.Boolean
      description: Whether to escape special characters in the values.
    return:
      type: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
      description: A new instance of the IArgumentsBuilder with the updated arguments.
    content.vb: >-
      <Pure>

      Public Function Add(values As IEnumerable(Of String), escapeSpecialChars As Boolean) As IArgumentsBuilder
  overload: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add*
  implements:
  - AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: ArgumentsBuilder.Add(IEnumerable(Of String), Boolean)
  fullName.vb: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable(Of String), Boolean)
  name.vb: Add(IEnumerable(Of String), Boolean)
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.String})
  id: Add(System.Collections.Generic.IEnumerable{System.String})
  parent: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  langs:
  - csharp
  - vb
  name: Add(IEnumerable<string>)
  nameWithType: ArgumentsBuilder.Add(IEnumerable<string>)
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable<string>)
  type: Method
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: Add
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 179
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  summary: Appends a collection of string values to the arguments builder without escaping special characters.
  example: []
  syntax:
    content: >-
      [Pure]

      public IArgumentsBuilder Add(IEnumerable<string> values)
    parameters:
    - id: values
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The collection of string values to append.
    return:
      type: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
      description: A new instance of the IArgumentsBuilder with the updated arguments.
    content.vb: >-
      <Pure>

      Public Function Add(values As IEnumerable(Of String)) As IArgumentsBuilder
  overload: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add*
  implements:
  - AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.String})
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: ArgumentsBuilder.Add(IEnumerable(Of String))
  fullName.vb: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable(Of String))
  name.vb: Add(IEnumerable(Of String))
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable,System.IFormatProvider,System.Boolean)
  commentId: M:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable,System.IFormatProvider,System.Boolean)
  id: Add(System.IFormattable,System.IFormatProvider,System.Boolean)
  parent: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  langs:
  - csharp
  - vb
  name: Add(IFormattable, IFormatProvider, bool)
  nameWithType: ArgumentsBuilder.Add(IFormattable, IFormatProvider, bool)
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable, System.IFormatProvider, bool)
  type: Method
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: Add
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 192
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  summary: Appends a formattable value to the arguments builder.
  example: []
  syntax:
    content: >-
      [Pure]

      public IArgumentsBuilder Add(IFormattable value, IFormatProvider formatProvider, bool escapeSpecialChars = true)
    parameters:
    - id: value
      type: System.IFormattable
      description: The formattable value to append.
    - id: formatProvider
      type: System.IFormatProvider
      description: The format provider to use for formatting the value.
    - id: escapeSpecialChars
      type: System.Boolean
      description: Whether to escape special characters in the values.
    return:
      type: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
      description: A new instance of the IArgumentsBuilder with the updated arguments.
    content.vb: >-
      <Pure>

      Public Function Add(value As IFormattable, formatProvider As IFormatProvider, escapeSpecialChars As Boolean = True) As IArgumentsBuilder
  overload: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add*
  implements:
  - AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable,System.IFormatProvider,System.Boolean)
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: ArgumentsBuilder.Add(IFormattable, IFormatProvider, Boolean)
  fullName.vb: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable, System.IFormatProvider, Boolean)
  name.vb: Add(IFormattable, IFormatProvider, Boolean)
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable,System.Globalization.CultureInfo,System.Boolean)
  commentId: M:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable,System.Globalization.CultureInfo,System.Boolean)
  id: Add(System.IFormattable,System.Globalization.CultureInfo,System.Boolean)
  parent: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  langs:
  - csharp
  - vb
  name: Add(IFormattable, CultureInfo, bool)
  nameWithType: ArgumentsBuilder.Add(IFormattable, CultureInfo, bool)
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable, System.Globalization.CultureInfo, bool)
  type: Method
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: Add
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 219
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  summary: Appends a formattable value to the arguments builder using the specified culture.
  example: []
  syntax:
    content: >-
      [Pure]

      public IArgumentsBuilder Add(IFormattable value, CultureInfo cultureInfo, bool escapeSpecialChars)
    parameters:
    - id: value
      type: System.IFormattable
      description: The formattable value to append.
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: The culture to use for formatting the value.
    - id: escapeSpecialChars
      type: System.Boolean
      description: Whether to escape special characters in the values.
    return:
      type: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
      description: A new instance of the IArgumentsBuilder with the updated arguments.
    content.vb: >-
      <Pure>

      Public Function Add(value As IFormattable, cultureInfo As CultureInfo, escapeSpecialChars As Boolean) As IArgumentsBuilder
  overload: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add*
  implements:
  - AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable,System.Globalization.CultureInfo,System.Boolean)
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: ArgumentsBuilder.Add(IFormattable, CultureInfo, Boolean)
  fullName.vb: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable, System.Globalization.CultureInfo, Boolean)
  name.vb: Add(IFormattable, CultureInfo, Boolean)
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable,System.Globalization.CultureInfo)
  commentId: M:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable,System.Globalization.CultureInfo)
  id: Add(System.IFormattable,System.Globalization.CultureInfo)
  parent: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  langs:
  - csharp
  - vb
  name: Add(IFormattable, CultureInfo)
  nameWithType: ArgumentsBuilder.Add(IFormattable, CultureInfo)
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: Add
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 245
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  summary: Appends a formattable value to the arguments builder using the specified culture without escaping special characters.
  example: []
  syntax:
    content: >-
      [Pure]

      public IArgumentsBuilder Add(IFormattable value, CultureInfo cultureInfo)
    parameters:
    - id: value
      type: System.IFormattable
      description: The formattable value to append.
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: The culture to use for formatting the value.
    return:
      type: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
      description: A new instance of the IArgumentsBuilder with the updated arguments.
    content.vb: >-
      <Pure>

      Public Function Add(value As IFormattable, cultureInfo As CultureInfo) As IArgumentsBuilder
  overload: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add*
  implements:
  - AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable,System.Globalization.CultureInfo)
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable,System.Boolean)
  commentId: M:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable,System.Boolean)
  id: Add(System.IFormattable,System.Boolean)
  parent: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  langs:
  - csharp
  - vb
  name: Add(IFormattable, bool)
  nameWithType: ArgumentsBuilder.Add(IFormattable, bool)
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable, bool)
  type: Method
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: Add
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 257
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  summary: Appends a formattable value to the arguments builder.
  example: []
  syntax:
    content: >-
      [Pure]

      public IArgumentsBuilder Add(IFormattable value, bool escapeSpecialChars)
    parameters:
    - id: value
      type: System.IFormattable
      description: The formattable value to append.
    - id: escapeSpecialChars
      type: System.Boolean
      description: Whether to escape special characters in the values.
    return:
      type: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
      description: A new instance of the IArgumentsBuilder with the updated arguments.
    content.vb: >-
      <Pure>

      Public Function Add(value As IFormattable, escapeSpecialChars As Boolean) As IArgumentsBuilder
  overload: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add*
  implements:
  - AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable,System.Boolean)
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: ArgumentsBuilder.Add(IFormattable, Boolean)
  fullName.vb: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable, Boolean)
  name.vb: Add(IFormattable, Boolean)
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable)
  commentId: M:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable)
  id: Add(System.IFormattable)
  parent: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  langs:
  - csharp
  - vb
  name: Add(IFormattable)
  nameWithType: ArgumentsBuilder.Add(IFormattable)
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.IFormattable)
  type: Method
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: Add
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 268
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  summary: Appends a formattable value to the arguments builder without specifying a culture and without escaping special characters.
  example: []
  syntax:
    content: >-
      [Pure]

      public IArgumentsBuilder Add(IFormattable value)
    parameters:
    - id: value
      type: System.IFormattable
      description: The formattable value to append.
    return:
      type: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
      description: A new instance of the IArgumentsBuilder with the updated arguments.
    content.vb: >-
      <Pure>

      Public Function Add(value As IFormattable) As IArgumentsBuilder
  overload: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add*
  implements:
  - AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable)
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.IFormatProvider,System.Boolean)
  commentId: M:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.IFormatProvider,System.Boolean)
  id: Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.IFormatProvider,System.Boolean)
  parent: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  langs:
  - csharp
  - vb
  name: Add(IEnumerable<IFormattable>, IFormatProvider, bool)
  nameWithType: ArgumentsBuilder.Add(IEnumerable<IFormattable>, IFormatProvider, bool)
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable<System.IFormattable>, System.IFormatProvider, bool)
  type: Method
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: Add
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 281
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  summary: Appends a collection of formattable values to the arguments builder.
  example: []
  syntax:
    content: >-
      [Pure]

      public IArgumentsBuilder Add(IEnumerable<IFormattable> values, IFormatProvider formatProvider, bool escapeSpecialChars = true)
    parameters:
    - id: values
      type: System.Collections.Generic.IEnumerable{System.IFormattable}
      description: The collection of formattable values to append.
    - id: formatProvider
      type: System.IFormatProvider
      description: The format provider to use for formatting the values.
    - id: escapeSpecialChars
      type: System.Boolean
      description: Whether to escape special characters in the values.
    return:
      type: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
      description: A new instance of the IArgumentsBuilder with the updated arguments.
    content.vb: >-
      <Pure>

      Public Function Add(values As IEnumerable(Of IFormattable), formatProvider As IFormatProvider, escapeSpecialChars As Boolean = True) As IArgumentsBuilder
  overload: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add*
  implements:
  - AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.IFormatProvider,System.Boolean)
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: ArgumentsBuilder.Add(IEnumerable(Of IFormattable), IFormatProvider, Boolean)
  fullName.vb: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable(Of System.IFormattable), System.IFormatProvider, Boolean)
  name.vb: Add(IEnumerable(Of IFormattable), IFormatProvider, Boolean)
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Globalization.CultureInfo,System.Boolean)
  commentId: M:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Globalization.CultureInfo,System.Boolean)
  id: Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Globalization.CultureInfo,System.Boolean)
  parent: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  langs:
  - csharp
  - vb
  name: Add(IEnumerable<IFormattable>, CultureInfo, bool)
  nameWithType: ArgumentsBuilder.Add(IEnumerable<IFormattable>, CultureInfo, bool)
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable<System.IFormattable>, System.Globalization.CultureInfo, bool)
  type: Method
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: Add
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 319
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  summary: Appends a collection of formattable values to the arguments builder using the specified culture.
  example: []
  syntax:
    content: >-
      [Pure]

      public IArgumentsBuilder Add(IEnumerable<IFormattable> values, CultureInfo cultureInfo, bool escapeSpecialChars)
    parameters:
    - id: values
      type: System.Collections.Generic.IEnumerable{System.IFormattable}
      description: The collection of formattable values to append.
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: The culture to use for formatting the values.
    - id: escapeSpecialChars
      type: System.Boolean
      description: Whether to escape special characters in the values.
    return:
      type: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
      description: A new instance of the IArgumentsBuilder with the updated arguments.
    content.vb: >-
      <Pure>

      Public Function Add(values As IEnumerable(Of IFormattable), cultureInfo As CultureInfo, escapeSpecialChars As Boolean) As IArgumentsBuilder
  overload: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add*
  implements:
  - AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Globalization.CultureInfo,System.Boolean)
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: ArgumentsBuilder.Add(IEnumerable(Of IFormattable), CultureInfo, Boolean)
  fullName.vb: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable(Of System.IFormattable), System.Globalization.CultureInfo, Boolean)
  name.vb: Add(IEnumerable(Of IFormattable), CultureInfo, Boolean)
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Globalization.CultureInfo)
  commentId: M:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Globalization.CultureInfo)
  id: Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Globalization.CultureInfo)
  parent: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  langs:
  - csharp
  - vb
  name: Add(IEnumerable<IFormattable>, CultureInfo)
  nameWithType: ArgumentsBuilder.Add(IEnumerable<IFormattable>, CultureInfo)
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable<System.IFormattable>, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: Add
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 345
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  summary: Appends a collection of formattable values to the arguments builder using the specified culture without escaping special characters.
  example: []
  syntax:
    content: >-
      [Pure]

      public IArgumentsBuilder Add(IEnumerable<IFormattable> values, CultureInfo cultureInfo)
    parameters:
    - id: values
      type: System.Collections.Generic.IEnumerable{System.IFormattable}
      description: The collection of formattable values to append.
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: The culture to use for formatting the values.
    return:
      type: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
      description: A new instance of the IArgumentsBuilder with the updated arguments.
    content.vb: >-
      <Pure>

      Public Function Add(values As IEnumerable(Of IFormattable), cultureInfo As CultureInfo) As IArgumentsBuilder
  overload: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add*
  implements:
  - AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Globalization.CultureInfo)
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: ArgumentsBuilder.Add(IEnumerable(Of IFormattable), CultureInfo)
  fullName.vb: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable(Of System.IFormattable), System.Globalization.CultureInfo)
  name.vb: Add(IEnumerable(Of IFormattable), CultureInfo)
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Boolean)
  commentId: M:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Boolean)
  id: Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Boolean)
  parent: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  langs:
  - csharp
  - vb
  name: Add(IEnumerable<IFormattable>, bool)
  nameWithType: ArgumentsBuilder.Add(IEnumerable<IFormattable>, bool)
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable<System.IFormattable>, bool)
  type: Method
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: Add
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 357
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  summary: Appends a collection of formattable values to the arguments builder without specifying a culture.
  example: []
  syntax:
    content: >-
      [Pure]

      public IArgumentsBuilder Add(IEnumerable<IFormattable> values, bool escapeSpecialChars)
    parameters:
    - id: values
      type: System.Collections.Generic.IEnumerable{System.IFormattable}
      description: The collection of formattable values to append.
    - id: escapeSpecialChars
      type: System.Boolean
      description: Whether to escape special characters in the values.
    return:
      type: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
      description: A new instance of the IArgumentsBuilder with the updated arguments.
    content.vb: >-
      <Pure>

      Public Function Add(values As IEnumerable(Of IFormattable), escapeSpecialChars As Boolean) As IArgumentsBuilder
  overload: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add*
  implements:
  - AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Boolean)
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: ArgumentsBuilder.Add(IEnumerable(Of IFormattable), Boolean)
  fullName.vb: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable(Of System.IFormattable), Boolean)
  name.vb: Add(IEnumerable(Of IFormattable), Boolean)
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable})
  commentId: M:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable})
  id: Add(System.Collections.Generic.IEnumerable{System.IFormattable})
  parent: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  langs:
  - csharp
  - vb
  name: Add(IEnumerable<IFormattable>)
  nameWithType: ArgumentsBuilder.Add(IEnumerable<IFormattable>)
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable<System.IFormattable>)
  type: Method
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: Add
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 368
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  summary: Appends a collection of formattable values to the arguments builder without specifying a culture and without escaping special characters.
  example: []
  syntax:
    content: >-
      [Pure]

      public IArgumentsBuilder Add(IEnumerable<IFormattable> values)
    parameters:
    - id: values
      type: System.Collections.Generic.IEnumerable{System.IFormattable}
      description: The collection of formattable values to append.
    return:
      type: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
      description: A new instance of the IArgumentsBuilder with the updated arguments.
    content.vb: >-
      <Pure>

      Public Function Add(values As IEnumerable(Of IFormattable)) As IArgumentsBuilder
  overload: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add*
  implements:
  - AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable})
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: ArgumentsBuilder.Add(IEnumerable(Of IFormattable))
  fullName.vb: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add(System.Collections.Generic.IEnumerable(Of System.IFormattable))
  name.vb: Add(IEnumerable(Of IFormattable))
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.EscapeSpecialCharacters(System.String)
  commentId: M:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.EscapeSpecialCharacters(System.String)
  id: EscapeSpecialCharacters(System.String)
  parent: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  langs:
  - csharp
  - vb
  name: EscapeSpecialCharacters(string)
  nameWithType: ArgumentsBuilder.EscapeSpecialCharacters(string)
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.EscapeSpecialCharacters(string)
  type: Method
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: EscapeSpecialCharacters
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 379
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  summary: Escapes special characters in a string.
  example: []
  syntax:
    content: >-
      [Pure]

      public string EscapeSpecialCharacters(string argument)
    parameters:
    - id: argument
      type: System.String
      description: The string to escape.
    return:
      type: System.String
      description: The escaped string.
    content.vb: >-
      <Pure>

      Public Function EscapeSpecialCharacters(argument As String) As String
  overload: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.EscapeSpecialCharacters*
  implements:
  - AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.EscapeSpecialCharacters(System.String)
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: ArgumentsBuilder.EscapeSpecialCharacters(String)
  fullName.vb: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.EscapeSpecialCharacters(String)
  name.vb: EscapeSpecialCharacters(String)
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.ToString
  commentId: M:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.ToString
  id: ToString
  parent: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ArgumentsBuilder.ToString()
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.ToString()
  type: Method
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: ToString
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 394
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  summary: Builds the arguments into a string.
  example: []
  syntax:
    content: public string ToString()
    return:
      type: System.String
      description: The arguments as a string.
    content.vb: Public Function ToString() As String
  overload: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.ToString*
  implements:
  - AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.ToString
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Clear
  commentId: M:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Clear
  id: Clear
  parent: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ArgumentsBuilder.Clear()
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Clear()
  type: Method
  source:
    remote:
      path: src/CliInvoke/Builders/ArgumentsBuilder.cs
      branch: add-docfx
      repo: https://github.com/alastairlundy/CliInvoke.git
    id: Clear
    path: ../src/CliInvoke/Builders/ArgumentsBuilder.cs
    startLine: 402
  assemblies:
  - AlastairLundy.CliInvoke
  namespace: AlastairLundy.CliInvoke.Builders
  summary: Clears the provided argument strings.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Clear*
  implements:
  - AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Clear
references:
- uid: AlastairLundy.CliInvoke.Builders
  commentId: N:AlastairLundy.CliInvoke.Builders
  href: AlastairLundy.html
  name: AlastairLundy.CliInvoke.Builders
  nameWithType: AlastairLundy.CliInvoke.Builders
  fullName: AlastairLundy.CliInvoke.Builders
  spec.csharp:
  - uid: AlastairLundy
    name: AlastairLundy
    href: AlastairLundy.html
  - name: .
  - uid: AlastairLundy.CliInvoke
    name: CliInvoke
    href: AlastairLundy.CliInvoke.html
  - name: .
  - uid: AlastairLundy.CliInvoke.Builders
    name: Builders
    href: AlastairLundy.CliInvoke.Builders.html
  spec.vb:
  - uid: AlastairLundy
    name: AlastairLundy
    href: AlastairLundy.html
  - name: .
  - uid: AlastairLundy.CliInvoke
    name: CliInvoke
    href: AlastairLundy.CliInvoke.html
  - name: .
  - uid: AlastairLundy.CliInvoke.Builders
    name: Builders
    href: AlastairLundy.CliInvoke.Builders.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
  commentId: T:AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
  parent: AlastairLundy.CliInvoke.Builders.Abstractions
  href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html
  name: IArgumentsBuilder
  nameWithType: IArgumentsBuilder
  fullName: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AlastairLundy.CliInvoke.Builders.Abstractions
  commentId: N:AlastairLundy.CliInvoke.Builders.Abstractions
  href: AlastairLundy.html
  name: AlastairLundy.CliInvoke.Builders.Abstractions
  nameWithType: AlastairLundy.CliInvoke.Builders.Abstractions
  fullName: AlastairLundy.CliInvoke.Builders.Abstractions
  spec.csharp:
  - uid: AlastairLundy
    name: AlastairLundy
    href: AlastairLundy.html
  - name: .
  - uid: AlastairLundy.CliInvoke
    name: CliInvoke
    href: AlastairLundy.CliInvoke.html
  - name: .
  - uid: AlastairLundy.CliInvoke.Builders
    name: Builders
    href: AlastairLundy.CliInvoke.Builders.html
  - name: .
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions
    name: Abstractions
    href: AlastairLundy.CliInvoke.Builders.Abstractions.html
  spec.vb:
  - uid: AlastairLundy
    name: AlastairLundy
    href: AlastairLundy.html
  - name: .
  - uid: AlastairLundy.CliInvoke
    name: CliInvoke
    href: AlastairLundy.CliInvoke.html
  - name: .
  - uid: AlastairLundy.CliInvoke.Builders
    name: Builders
    href: AlastairLundy.CliInvoke.Builders.html
  - name: .
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions
    name: Abstractions
    href: AlastairLundy.CliInvoke.Builders.Abstractions.html
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.#ctor*
  commentId: Overload:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.#ctor
  href: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_ArgumentsBuilder__ctor
  name: ArgumentsBuilder
  nameWithType: ArgumentsBuilder.ArgumentsBuilder
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.ArgumentsBuilder
  nameWithType.vb: ArgumentsBuilder.New
  fullName.vb: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.New
  name.vb: New
- uid: System.Func{System.String,System.Boolean}
  commentId: T:System.Func{System.String,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<string, bool>
  nameWithType: Func<string, bool>
  fullName: System.Func<string, bool>
  nameWithType.vb: Func(Of String, Boolean)
  fullName.vb: System.Func(Of String, Boolean)
  name.vb: Func(Of String, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add*
  commentId: Overload:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add
  href: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_ArgumentsBuilder_Add_System_String_System_Boolean_
  name: Add
  nameWithType: ArgumentsBuilder.Add
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Add
- uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.String,System.Boolean)
  commentId: M:AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.String,System.Boolean)
  parent: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
  isExternal: true
  href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_String_System_Boolean_
  name: Add(string, bool)
  nameWithType: IArgumentsBuilder.Add(string, bool)
  fullName: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(string, bool)
  nameWithType.vb: IArgumentsBuilder.Add(String, Boolean)
  fullName.vb: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(String, Boolean)
  name.vb: Add(String, Boolean)
  spec.csharp:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.String,System.Boolean)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_String_System_Boolean_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.String,System.Boolean)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_String_System_Boolean_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.String)
  commentId: M:AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.String)
  parent: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
  isExternal: true
  href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_String_
  name: Add(string)
  nameWithType: IArgumentsBuilder.Add(string)
  fullName: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(string)
  nameWithType.vb: IArgumentsBuilder.Add(String)
  fullName.vb: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(String)
  name.vb: Add(String)
  spec.csharp:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.String)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.String)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  commentId: M:AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  parent: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
  isExternal: true
  href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_Collections_Generic_IEnumerable_System_String__System_Boolean_
  name: Add(IEnumerable<string>, bool)
  nameWithType: IArgumentsBuilder.Add(IEnumerable<string>, bool)
  fullName: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable<string>, bool)
  nameWithType.vb: IArgumentsBuilder.Add(IEnumerable(Of String), Boolean)
  fullName.vb: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable(Of String), Boolean)
  name.vb: Add(IEnumerable(Of String), Boolean)
  spec.csharp:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_Collections_Generic_IEnumerable_System_String__System_Boolean_
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_Collections_Generic_IEnumerable_System_String__System_Boolean_
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.String})
  parent: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
  isExternal: true
  href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_Collections_Generic_IEnumerable_System_String__
  name: Add(IEnumerable<string>)
  nameWithType: IArgumentsBuilder.Add(IEnumerable<string>)
  fullName: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable<string>)
  nameWithType.vb: IArgumentsBuilder.Add(IEnumerable(Of String))
  fullName.vb: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable(Of String))
  name.vb: Add(IEnumerable(Of String))
  spec.csharp:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.String})
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_Collections_Generic_IEnumerable_System_String__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.String})
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_Collections_Generic_IEnumerable_System_String__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable,System.IFormatProvider,System.Boolean)
  commentId: M:AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable,System.IFormatProvider,System.Boolean)
  parent: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
  isExternal: true
  href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_IFormattable_System_IFormatProvider_System_Boolean_
  name: Add(IFormattable, IFormatProvider, bool)
  nameWithType: IArgumentsBuilder.Add(IFormattable, IFormatProvider, bool)
  fullName: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable, System.IFormatProvider, bool)
  nameWithType.vb: IArgumentsBuilder.Add(IFormattable, IFormatProvider, Boolean)
  fullName.vb: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable, System.IFormatProvider, Boolean)
  name.vb: Add(IFormattable, IFormatProvider, Boolean)
  spec.csharp:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable,System.IFormatProvider,System.Boolean)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_IFormattable_System_IFormatProvider_System_Boolean_
  - name: (
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable,System.IFormatProvider,System.Boolean)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_IFormattable_System_IFormatProvider_System_Boolean_
  - name: (
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable,System.Globalization.CultureInfo,System.Boolean)
  commentId: M:AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable,System.Globalization.CultureInfo,System.Boolean)
  parent: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
  isExternal: true
  href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_IFormattable_System_Globalization_CultureInfo_System_Boolean_
  name: Add(IFormattable, CultureInfo, bool)
  nameWithType: IArgumentsBuilder.Add(IFormattable, CultureInfo, bool)
  fullName: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable, System.Globalization.CultureInfo, bool)
  nameWithType.vb: IArgumentsBuilder.Add(IFormattable, CultureInfo, Boolean)
  fullName.vb: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable, System.Globalization.CultureInfo, Boolean)
  name.vb: Add(IFormattable, CultureInfo, Boolean)
  spec.csharp:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable,System.Globalization.CultureInfo,System.Boolean)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_IFormattable_System_Globalization_CultureInfo_System_Boolean_
  - name: (
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable,System.Globalization.CultureInfo,System.Boolean)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_IFormattable_System_Globalization_CultureInfo_System_Boolean_
  - name: (
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
- uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable,System.Globalization.CultureInfo)
  commentId: M:AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable,System.Globalization.CultureInfo)
  parent: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
  isExternal: true
  href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_IFormattable_System_Globalization_CultureInfo_
  name: Add(IFormattable, CultureInfo)
  nameWithType: IArgumentsBuilder.Add(IFormattable, CultureInfo)
  fullName: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable,System.Globalization.CultureInfo)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_IFormattable_System_Globalization_CultureInfo_
  - name: (
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: )
  spec.vb:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable,System.Globalization.CultureInfo)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_IFormattable_System_Globalization_CultureInfo_
  - name: (
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: )
- uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable,System.Boolean)
  commentId: M:AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable,System.Boolean)
  parent: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
  isExternal: true
  href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_IFormattable_System_Boolean_
  name: Add(IFormattable, bool)
  nameWithType: IArgumentsBuilder.Add(IFormattable, bool)
  fullName: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable, bool)
  nameWithType.vb: IArgumentsBuilder.Add(IFormattable, Boolean)
  fullName.vb: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable, Boolean)
  name.vb: Add(IFormattable, Boolean)
  spec.csharp:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable,System.Boolean)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_IFormattable_System_Boolean_
  - name: (
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable,System.Boolean)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_IFormattable_System_Boolean_
  - name: (
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable)
  commentId: M:AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable)
  parent: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
  isExternal: true
  href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_IFormattable_
  name: Add(IFormattable)
  nameWithType: IArgumentsBuilder.Add(IFormattable)
  fullName: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable)
  spec.csharp:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_IFormattable_
  - name: (
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: )
  spec.vb:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.IFormattable)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_IFormattable_
  - name: (
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: )
- uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.IFormatProvider,System.Boolean)
  commentId: M:AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.IFormatProvider,System.Boolean)
  parent: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
  isExternal: true
  href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_Collections_Generic_IEnumerable_System_IFormattable__System_IFormatProvider_System_Boolean_
  name: Add(IEnumerable<IFormattable>, IFormatProvider, bool)
  nameWithType: IArgumentsBuilder.Add(IEnumerable<IFormattable>, IFormatProvider, bool)
  fullName: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable<System.IFormattable>, System.IFormatProvider, bool)
  nameWithType.vb: IArgumentsBuilder.Add(IEnumerable(Of IFormattable), IFormatProvider, Boolean)
  fullName.vb: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable(Of System.IFormattable), System.IFormatProvider, Boolean)
  name.vb: Add(IEnumerable(Of IFormattable), IFormatProvider, Boolean)
  spec.csharp:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.IFormatProvider,System.Boolean)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_Collections_Generic_IEnumerable_System_IFormattable__System_IFormatProvider_System_Boolean_
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.IFormatProvider,System.Boolean)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_Collections_Generic_IEnumerable_System_IFormattable__System_IFormatProvider_System_Boolean_
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: )
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.IFormattable}
  commentId: T:System.Collections.Generic.IEnumerable{System.IFormattable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IFormattable>
  nameWithType: IEnumerable<IFormattable>
  fullName: System.Collections.Generic.IEnumerable<System.IFormattable>
  nameWithType.vb: IEnumerable(Of IFormattable)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.IFormattable)
  name.vb: IEnumerable(Of IFormattable)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: )
- uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Globalization.CultureInfo,System.Boolean)
  commentId: M:AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Globalization.CultureInfo,System.Boolean)
  parent: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
  isExternal: true
  href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_Collections_Generic_IEnumerable_System_IFormattable__System_Globalization_CultureInfo_System_Boolean_
  name: Add(IEnumerable<IFormattable>, CultureInfo, bool)
  nameWithType: IArgumentsBuilder.Add(IEnumerable<IFormattable>, CultureInfo, bool)
  fullName: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable<System.IFormattable>, System.Globalization.CultureInfo, bool)
  nameWithType.vb: IArgumentsBuilder.Add(IEnumerable(Of IFormattable), CultureInfo, Boolean)
  fullName.vb: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable(Of System.IFormattable), System.Globalization.CultureInfo, Boolean)
  name.vb: Add(IEnumerable(Of IFormattable), CultureInfo, Boolean)
  spec.csharp:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Globalization.CultureInfo,System.Boolean)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_Collections_Generic_IEnumerable_System_IFormattable__System_Globalization_CultureInfo_System_Boolean_
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Globalization.CultureInfo,System.Boolean)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_Collections_Generic_IEnumerable_System_IFormattable__System_Globalization_CultureInfo_System_Boolean_
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: )
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Globalization.CultureInfo)
  commentId: M:AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Globalization.CultureInfo)
  parent: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
  isExternal: true
  href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_Collections_Generic_IEnumerable_System_IFormattable__System_Globalization_CultureInfo_
  name: Add(IEnumerable<IFormattable>, CultureInfo)
  nameWithType: IArgumentsBuilder.Add(IEnumerable<IFormattable>, CultureInfo)
  fullName: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable<System.IFormattable>, System.Globalization.CultureInfo)
  nameWithType.vb: IArgumentsBuilder.Add(IEnumerable(Of IFormattable), CultureInfo)
  fullName.vb: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable(Of System.IFormattable), System.Globalization.CultureInfo)
  name.vb: Add(IEnumerable(Of IFormattable), CultureInfo)
  spec.csharp:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Globalization.CultureInfo)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_Collections_Generic_IEnumerable_System_IFormattable__System_Globalization_CultureInfo_
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: )
  spec.vb:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Globalization.CultureInfo)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_Collections_Generic_IEnumerable_System_IFormattable__System_Globalization_CultureInfo_
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: )
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: )
- uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Boolean)
  commentId: M:AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Boolean)
  parent: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
  isExternal: true
  href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_Collections_Generic_IEnumerable_System_IFormattable__System_Boolean_
  name: Add(IEnumerable<IFormattable>, bool)
  nameWithType: IArgumentsBuilder.Add(IEnumerable<IFormattable>, bool)
  fullName: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable<System.IFormattable>, bool)
  nameWithType.vb: IArgumentsBuilder.Add(IEnumerable(Of IFormattable), Boolean)
  fullName.vb: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable(Of System.IFormattable), Boolean)
  name.vb: Add(IEnumerable(Of IFormattable), Boolean)
  spec.csharp:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Boolean)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_Collections_Generic_IEnumerable_System_IFormattable__System_Boolean_
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable},System.Boolean)
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_Collections_Generic_IEnumerable_System_IFormattable__System_Boolean_
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable})
  commentId: M:AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable})
  parent: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
  isExternal: true
  href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_Collections_Generic_IEnumerable_System_IFormattable__
  name: Add(IEnumerable<IFormattable>)
  nameWithType: IArgumentsBuilder.Add(IEnumerable<IFormattable>)
  fullName: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable<System.IFormattable>)
  nameWithType.vb: IArgumentsBuilder.Add(IEnumerable(Of IFormattable))
  fullName.vb: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable(Of System.IFormattable))
  name.vb: Add(IEnumerable(Of IFormattable))
  spec.csharp:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable})
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_Collections_Generic_IEnumerable_System_IFormattable__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: '>'
  - name: )
  spec.vb:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Add(System.Collections.Generic.IEnumerable{System.IFormattable})
    name: Add
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Add_System_Collections_Generic_IEnumerable_System_IFormattable__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IFormattable
    name: IFormattable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable
  - name: )
  - name: )
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.EscapeSpecialCharacters*
  commentId: Overload:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.EscapeSpecialCharacters
  href: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_ArgumentsBuilder_EscapeSpecialCharacters_System_String_
  name: EscapeSpecialCharacters
  nameWithType: ArgumentsBuilder.EscapeSpecialCharacters
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.EscapeSpecialCharacters
- uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.EscapeSpecialCharacters(System.String)
  commentId: M:AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.EscapeSpecialCharacters(System.String)
  parent: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
  isExternal: true
  href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_EscapeSpecialCharacters_System_String_
  name: EscapeSpecialCharacters(string)
  nameWithType: IArgumentsBuilder.EscapeSpecialCharacters(string)
  fullName: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.EscapeSpecialCharacters(string)
  nameWithType.vb: IArgumentsBuilder.EscapeSpecialCharacters(String)
  fullName.vb: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.EscapeSpecialCharacters(String)
  name.vb: EscapeSpecialCharacters(String)
  spec.csharp:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.EscapeSpecialCharacters(System.String)
    name: EscapeSpecialCharacters
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_EscapeSpecialCharacters_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.EscapeSpecialCharacters(System.String)
    name: EscapeSpecialCharacters
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_EscapeSpecialCharacters_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.ToString*
  commentId: Overload:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.ToString
  href: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_ArgumentsBuilder_ToString
  name: ToString
  nameWithType: ArgumentsBuilder.ToString
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.ToString
- uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.ToString
  commentId: M:AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.ToString
  parent: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
  href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_ToString
  name: ToString()
  nameWithType: IArgumentsBuilder.ToString()
  fullName: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.ToString()
  spec.csharp:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.ToString
    name: ToString
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.ToString
    name: ToString
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_ToString
  - name: (
  - name: )
- uid: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Clear*
  commentId: Overload:AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Clear
  href: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_ArgumentsBuilder_Clear
  name: Clear
  nameWithType: ArgumentsBuilder.Clear
  fullName: AlastairLundy.CliInvoke.Builders.ArgumentsBuilder.Clear
- uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Clear
  commentId: M:AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Clear
  parent: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder
  href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Clear
  name: Clear()
  nameWithType: IArgumentsBuilder.Clear()
  fullName: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Clear()
  spec.csharp:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Clear
    name: Clear
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Clear
  - name: (
  - name: )
  spec.vb:
  - uid: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.Clear
    name: Clear
    href: AlastairLundy.CliInvoke.Builders.Abstractions.IArgumentsBuilder.html#AlastairLundy_CliInvoke_Builders_Abstractions_IArgumentsBuilder_Clear
  - name: (
  - name: )
