<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <ImplicitUsings>disable</ImplicitUsings>
        <TargetFrameworks>net8.0;netstandard2.0;netstandard2.1;net9.0</TargetFrameworks>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <LangVersion>13</LangVersion>
        <Title>CliRunner</Title>
        <Authors>AlastairLundy</Authors>
        <Description>CliRunner is a .NET Library for interacting with Command Line Interfaces, CliRunner is a library for interacting with Command Line Interfaces and wrapping around executables.</Description>
        <Copyright>Copyright (c) Alastair Lundy 2024-2025</Copyright>
        <RepositoryUrl>https://github.com/alastairlundy/CliRunner</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <PackageReleaseNotes>## Changes since 1.0.0 Alpha 1

### Breaking Changes
* Moved ``ICommandBuilder`` to the ``CliRunner.Builders.Abstractions`` namespace (and corresponding folder) from ``CliRunner.Abstractions`` namespace.
* Renamed ``ICommandBuilder`` and ``CommandBuilder``  ``WithCredentials`` builder method to ``WithCredential``
* Renamed ``Credentials`` property name to ``Credential`` in relevant classes
* Changed ``ArgumentsBuilder`` methods to return ``IArgumentsBuilder`` instead of ``ArgumentsBuilder``
* Changed ``EnvironmentVariablesBuilder`` methods to return ``IEnvironmentVariablesBuilder`` instead of ``EnvironmentVariablesBuilder``
* Removed ``WithArgumentValidation`` method from  ``ArgumentsBuilder`` - Argument Validation must now be set when instantiating the ``ArgumentsBuilder``.
* Renamed ``Escape`` static ``ArgumentsBuilder`` method to ``EscapeSpecialChars``
* Removed builder interfaces from dependency injection extension method since it's setup is unnecessary.

### Non-breaking Changes
* Added ``IArgumentsBuilder`` interface that ``ArgumentsBuilder`` now inherits from - No new methods have been added to ``ArgumentsBuilder``.
* Added ``IEnvironmentVariablesBuilder`` interface that ``EnvironmentVariablesBuilder`` now inherits from - No new methods have been added to ``EnvironmentVariablesBuilder``
* Simplified OS Polyfill usage code
* Added ``AddUserCredential`` ProcessStartInfo and Process extension methods - This is now used within ``ProcessCreator`` to pass a UserCredential to the process start info if it is not null
* Renamed parameters in ``ArgumentsBuilder`` regarding escaping special characters

### Bug Fixes
* Fixed an issue where a ``UserCredential`` wasn't loaded by ``ProcessCreator`` if ``LoadUserProfile`` was set to false.
* Fixed an issue where Argument Validation logic wasn't passed as a parameter in returned new ``ArgumentsBuilder`` instances in builder methods.</PackageReleaseNotes>
        <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
        <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageVersion>1.0.0-alpha.2</PackageVersion>
        <PackageTags>shell, cli, process, wrapping, commandline,</PackageTags>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
    </PropertyGroup>

    <PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
        <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
    </PropertyGroup>
    
    <ItemGroup>
        <PackageReference Include="AlastairLundy.Extensions.Collections" Version="[6.0.0-alpha.2, 6.0.0)"/>
        <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="[9.0.1, 10.0.0)" />
    </ItemGroup>
    
    <ItemGroup >
        <PackageReference Include="Microsoft.Bcl.HashCode" Version="[6.0.0, 7.0.0)" Condition="'$(TargetFramework)' == 'netstandard2.0'"/>
        <PackageReference Include="PolyFill" Version="[7.16.1, 8.0.0)" Condition="'$(TargetFramework)' == 'netstandard2.0' OR '$(TargetFramework)' == 'netstandard2.1'"/>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="All"/>
    </ItemGroup>
    
    <ItemGroup>
      <Content Include="..\..\LICENSE.txt">
        <Link>LICENSE.txt</Link>
          <PackagePath>LICENSE.txt</PackagePath>
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </Content>
      <Content Include="..\..\README.md">
        <Link>README.md</Link>
          <PackagePath>README.md</PackagePath>
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </Content>
    </ItemGroup>
    
    <ItemGroup>
      <EmbeddedResource Update="Internal\Localizations\Resources.resx">
        <Generator>ResXFileCodeGenerator</Generator>
        <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      </EmbeddedResource>
    </ItemGroup>
    
    <ItemGroup>
      <Compile Update="Internal\Localizations\Resources.Designer.cs">
        <DesignTime>True</DesignTime>
        <AutoGen>True</AutoGen>
        <DependentUpon>Resources.resx</DependentUpon>
      </Compile>
    </ItemGroup>
    
    <ItemGroup>
      <None Update="THIRD_PARTY_NOTICES.txt">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
    </ItemGroup>

</Project>
